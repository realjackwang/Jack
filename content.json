{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"","slug":"我的电脑上有哪些神奇的软件","date":"2019-01-13T08:17:13.900Z","updated":"2019-01-13T08:20:54.111Z","comments":true,"path":"2019/01/13/我的电脑上有哪些神奇的软件/","link":"","permalink":"http://yoursite.com/2019/01/13/我的电脑上有哪些神奇的软件/","excerpt":"","text":"我的电脑上有哪些神奇的软件 nvm Node.js的包管理器 Node.js JavaScript运行环境 chocolate 非开发者包管理器 scoop 开发者包管理器 git 版本管理器 docker 应用容器引擎，虚拟机","categories":[],"tags":[],"keywords":[]},{"title":"","slug":"阅读","date":"2019-01-13T08:17:13.877Z","updated":"2019-01-13T08:59:31.828Z","comments":true,"path":"2019/01/13/阅读/","link":"","permalink":"http://yoursite.com/2019/01/13/阅读/","excerpt":"","text":"title：ASC准备工作 ASC Student Supercomputer Challenge (2019)Preliminary Contest Notifications要求: 一、学校或院系超级计算机活动简介（5分） 二、团队介绍（5分） 三、技术要求（90分） 设计一个HPC系统（15分） HPL和HPCG（15分） 单图像超分辨率挑战（30分） 简介 在本次比赛中，参赛者需要设计一种算法，使用深度学习等SOTA策略对使用双三次核下采样的图像进行4x SR上标。例如。4倍放大后的400x600图像的分辨率为1600x2400。评估将以感知质量感知的方式进行。pim2018[^4]中定义的感知指数(perception index, PI)将用于计算重建的高分辨率图像的质量。PI越低，重建图像的质量越高。Ma和NIOE是两种无参考图像质量度量[^5-6]。$$Perceptual \\ index = \\frac { 1 } { 2 } ( ( 10 - M a ) + N I Q E )$$每队提交80张重建的高分辨率图像进行评分测试。 对于初始和最终阶段，每个团队还应该提交一个文件夹，其中包含可以重现测试结果的源代码和模型。 | Folder Name | Contents || ————————————— | ———————————— || Single Image Super Resolution Challenge | Root directory || HR_images | reconstructed high-resolution images || script | PyTorch source code here || model | PyTorch model here | 评判标准 score = S~PI~ + S~prop~$$S _ { P I } = \\frac { 20 } { \\left( P I / P I _ { \\min } \\right) ^ { 4 } }$$ 参与者应该注意RMSE应该位于8 &lt;RMSE &lt; 18的范围内，否则S~PI~为0 S~prop~是委员会根据参与者的提案给出的分数。最大S~prop~为10。鼓励参与者详细描述他们的神经网络设计和网络性能 The participants must use PyTorch framework for this task CESM测试（30分） 简介 在气候建模社区广泛使用的模型中，社区地球系统模型(community Earth System Model, CESM)已成为世界上最流行的气候模型之一，广泛应用于气候变化、气候预测和气候变化的各种研究。 CESM是一个完全耦合的、社区的、全球气候模型，它提供了最先进的计算机模拟地球的过去。礼物。以及未来的气候状况。CESM是全球大约12个气候模型之一，可以用来模拟地球气候系统的许多组成部分，包括海洋、大气。海冰和陆地覆盖。使用CESM。研究人员现在可以模拟海洋生态系统与温室气体的相互作用:臭氧对气候的影响。尘埃和其他大气化学物质:碳在大气、海洋中的循环。陆地表面:以及温室气体对上层大气的影响。 CESM各组成部分的数学原理和算法在参考文献[^1]和[^2]中有详细描述。我们建议使用稳定版本的cesm1.2.2，其源代码可在参考[^3]中获得。关于CESM的安装和使用的更多信息可以从参考[^4]中找到。 评判标准 评价我们可以使用CESM和RMSE的诊断包来评估模型结果 CESM的诊断包可以获得每个变量的气候学和年变异性。 我们用500hPa位势高度作为代表。然后计算模型结果与观测数据之间的RMSE$$\\mathrm { RMSE } = \\sqrt { \\frac { \\sum _ { t = 1 } ^ { n } \\left( x _ { 1 , t } - x _ { 2 , t } \\right) ^ { 2 } } { n } }$$ Perceptual Losses for Real-Time Style Transfer and Super-Resolution 参考： 基于感知损失函数的实时风格转换和超分辨率重建 (zhwhong) 深度学习可以做哪些有趣的事情？ 简介摘要：我们考虑的图像转换的问题，即将一个输入图像变换成一个输出图像。最近热门的图像转换的方法通常是训练前馈卷积神经网络，将输出图像与原本图像的逐像素差距作为损失函数。并行的工作表明，高质量的图像可以通过用预训练好的网络提取高级特征、定义并优化感知损失函数来产生。我们组合了一下这两种方法各自的优势，提出采用感知损失函数训练前馈网络进行图像转换的任务。本文给出了图像风格化的结果，训练一个前馈网络去解决实时优化问题（Gatys等人提出的），和基于有优化的方法对比，我们的网络产生质量相当的结果，却能做到三个数量级的提速。我们还实验了单图的超分辨率重建，同样采用感知损失函数来代替求逐像素差距的损失函数 方法我们的系统由两部分组成： 一个图片转换网络f~w~ 一个损失网络 φ（用来定义一系列损失函数l1, l2, l3） 图片转换网络是一个深度残差网络 参数是权重W，它把输入的图片x通过映射 y=f~w~(x)转换成输出图片y，每一个损失函数计算一个标量值li(y,y~i~), 衡量输出的y和目标图像y~i~之间的差距。 图片转换网络是用SGD训练，使得一系列损失函数的加权和保持下降。 图像转换网络我们不用任何的池化层，取而代之的是用步幅卷积或微步幅卷积 我们的神经网络有五个残差块[42]组成，用了[44]说的结构。 所有的非残差卷积层都跟着一个空间性的batch-normalization[45]，和RELU的非线性层，最末的输出层除外。 最末层使用一个缩放的Tanh来确保输出图像的像素在[0,255]之间。 输入和输出：对于风格转换，输入和输出都是彩色图片，大小3x256x256。对于超分辨率重建，有一个上采样因子f，输出是一个高分辨率的图像3x288x288，输入是一个低分辨率图像 3x288/fx288/f，因为图像转换网络是完全卷积，所以在测试过程中它可以被应用到任何分辨率的图像中。 下采样和上采样：对于超分辨率重建，有一个上采样因子f，我们用了几个残差块跟着Log2f卷及网络（stride=1/2）。这个处理和[1]中不一样，[1]在把输入放进网络之前使用了双立方插值去上采样这个低分辨率输入。不依赖于任何一个固定的上采样插值函数，微步长卷积允许上采样函数和网络的其他部分一起被训练。 单图超分辨率重建： 在单图超分辨率重建中，任务是从一个低分辨率的输入，去产生一个高分辨率的输出图片。这是一个固有的病态问题，因为对一个低分辨率图像，有可能对应着很多种高分辨率的图像。当超分辨率因子变大时，这个不确定性会变得更大。对于更大的因子（x4 x8），高分辨率图像中的好的细节很可能只有一丁点或者根本没有出现在它的低分辨率版本中。 为了解决这个问题，我们训练了超分辨率重建网络，不使用过去使用的逐像素差损失函数，取而代之的是一个特征重建损失函数（看section 3）以保证语义信息可以从预训练好的损失网络中转移到超分辨率网络。我们重点关注x4和x8的超分辨率重建，因为更大的因子需要更多的语义信息。 传统的指标来衡量超分辨率的是PSNR和SSIM，两者都和人类的视觉质量没什么相关的[55,56,57,58,59].PSNR和SSIM仅仅依赖于像素间低层次的差别，并在高斯噪声的相乘下作用，这可能是无效的超分辨率。另外的，PSNR是相当于逐像素差的，所以用PSNR衡量的模型训练过程是让逐像素损失最小化。因此我们强调，这些实验的目标并不是实现先进的PSNR和SSIM结果，而是展示定性的质量差别（逐像素损失函数vs感知损失） 模型细节：我们训练模型来完成x4和x8的超分辨率重建，通过最小化特征损失（用vgg16在relu2_2层提取出），用了288x288的小块（1万张MSCOCO训练集），准备了低分辨率的输入，用高斯核模糊的（σ=1.0）下采样用了双立方插值。我们训练时bacth-size=4，训练了20万次，Adam，学习速率0.001，无权重衰减，无dropout。作为一个后续处理步骤，我们执行网络输出和低分辨率输入的直方图匹配。 基础：基本模型我们用的 SRCNN[1] 为了它优秀的表现，SRCNN是一个三层的卷积网络，损失函数是逐像素求差，用的ILSVRC2013数据集中的33x33的图片。SRCNN没有训练到x8倍，所以我们只能评估x4时的差异。 SRCNN训练了超过1亿次迭代，这在我们的模型上是不可能实现的。考虑到二者的差异（SRCNN和我们的模型），在数据，训练，结构上的差异。我们训练图片转换网络x4,x8用了逐像素求差的损失函数，这些网络使用相同搞得数据，结构，训练网络去减少lfeat 评测：我们评测了模型，在标准的集合5[60]，集合6[61]，BSD100[41]数据集，我们报告的PSNR和SSIM[54]，都只计算了在Y通道上的（当转换成YCbCr颜色空间后），跟[1,39]一样。 结果：我们展示了x4倍超分辨率重建的结果（图8），和其他的方法相比，我们的模型用特征重建训练的，得到了很好的结果，尤其是在锋锐的边缘和好的细节，比如图1的眼睫毛，图2帽子的细节元素。特征重建损失在放大下引起轻微的交叉阴影图案，和基础方法比起来更好。 结论在这篇文章中，我们结合了前馈网络和基于优化的方法的好处，通过用感知损失函数来训练前馈网络。我们对风格转换应用了这个方法达到了很好的表现和速度。对超分辨率重建运用了这个方法，证明了用感知损失来训练，能带来更多好的细节和边缘。 未来的工作中，我们期望把感知损失函数用在更多其他的图像转换任务中，如上色或者语义检测。我们还打算研究不同损失网络用于不同的任务，或者更多种不同的语义信息的数据集","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2019-01-13T08:03:09.631Z","updated":"2019-01-13T08:22:04.646Z","comments":true,"path":"2019/01/13/hello-world/","link":"","permalink":"http://yoursite.com/2019/01/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}